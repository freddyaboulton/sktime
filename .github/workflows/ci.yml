name: ci

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '
      - name: List changed files
        run: echo '${{ steps.file_changes.outputs.files}}'
      - uses: pre-commit/action@v2.0.0
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}

  test-examples:
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          pip install -r build_tools/requirements.txt
          pip install -r .binder/prelim_requirements.txt
          pip install -r .binder/requirements.txt
      - name: Build wheel
        run: python setup.py sdist bdist_wheel
      - name: Install from wheel
        run: pip install --pre --no-index --no-deps --find-links dist/ sktime
      - name: Run examples
        run: build_tools/run_examples.sh
        shell: bash

  test-macos:
    needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install OS packages
      run: brew install libomp
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r build_tools/requirements.txt
        pip install pytest-cov
    - name: Build wheel
      run: |
        export CC=/usr/bin/clang
        export CXX=/usr/bin/clang++
        export CPPFLAGS="$CPPFLAGS -Xpreprocessor -fopenmp"
        export CFLAGS="$CFLAGS -I/usr/local/opt/libomp/include"
        export CXXFLAGS="$CXXFLAGS -I/usr/local/opt/libomp/include"
        export LDFLAGS="$LDFLAGS -L/usr/local/opt/libomp/lib -lomp"
        export DYLD_LIBRARY_PATH=/usr/local/opt/libomp/lib
        export PATH="/usr/local/opt/ccache/libexec:$PATH"
        python setup.py sdist bdist_wheel
    - name: Install from wheel
      run: pip install --pre --no-index --no-deps --find-links dist/ sktime
    - name: Run tests
      run: |
        mkdir -p testdir/
        cp .coveragerc testdir/
        cp setup.cfg testdir/
        cd testdir/
        pytest --showlocals --durations=10 --pyargs --cov-report=xml --cov=sktime sktime
    - name: Display coverage report
      run: ls -l ./testdir/
    - name: Publish code coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./testdir/coverage.xml

  test-windows:
    needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.6, 3.7, 3.8.10]
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      name: Set up conda
      with:
        miniconda-version: "latest"
        auto-update-conda: true
        activate-environment: testenv
        channels: conda-forge,defaults
        channel-priority: true
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        conda install -c conda-forge -y "matplotlib>=3.3.2" "seaborn>=0.11.0" "tsfresh>=0.17.0" "hcrystalball>=0.1.9" "stumpy>=1.5.1" "fbprophet>=0.7.1" "numba>=0.53" "numpy>=1.19.3" "pandas>=1.1.0,<1.2" "statsmodels>=0.12.1" "scikit-learn>=0.24.0,<1.0" "scikit-posthocs>=0.6.5" "pystan>=2.14,<3.0"
        pip install -r build_tools/requirements.txt
        conda list
    - name: Build wheel
      run: |
        python setup.py build_ext --compiler=msvc
        python setup.py bdist_wheel bdist_wininst
        ls dist
    - name: Install from wheel
      run: pip install --pre --no-index --no-deps --find-links dist/ sktime
    - name: Run tests
      run: |
        mkdir -p testdir/
        cp .coveragerc testdir/
        cp setup.cfg testdir/
        cd testdir/
        pytest --showlocals --durations=10 --pyargs --cov-report=xml --cov=sktime sktime
    - name: Display coverage report
      run: ls -l ./testdir/
    - name: Publish code coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./testdir/coverage.xml
